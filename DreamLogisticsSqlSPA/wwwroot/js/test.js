var myApp = angular.module("myApp", ["ngRoute", "myControllers"]), myControllers; myApp.config(["$routeProvider", function (n) { n.when("/", { templateUrl: "/app/partials/queryList.html", controller: "QueryListController" }).when("/create", { templateUrl: "/app/partials/createQuery.html", controller: "CreateController" }).when("/search/:queryId", { templateUrl: "/app/partials/search.html", controller: "SearchController" }).when("/result", { templateUrl: "/app/partials/result.html", controller: "ResultController" }).when("/delete/:queryId", { templateUrl: "/app/partials/deleteQuery.html", controller: "DeleteController" }).when("/edit/:queryId", { templateUrl: "/app/partials/editQuery.html", controller: "EditController" }).when("/details/:queryId", { templateUrl: "/app/partials/queryDetails.html", controller: "DetailsController" }) }]); myControllers = angular.module("myControllers", []); myControllers.controller("CreateController", function (n, t) { n.queryCreated = !1; n.formData = { groupName: "", sql: "" }; n.formData.rows = [{ name: "", typeId: 0, parameterCode: "", tableName: "", columnName: "" }]; n.addRow = function () { n.formData.rows.push({ name: "", typeId: 0, parameterCode: "", tableName: "", columnName: "" }); console.log(n.formData.rows) }; n.removeRow = function (t) { n.formData.rows.splice(t, 1) }; n.addOptions = function (t) { const i = document.getElementsByClassName("sql-options-" + t); if (n.formData.rows[t].typeId == "4") for (const n of i) n.style.display = "block"; else { for (const n of i) n.style.display = "none"; n.formData.rows[t].tableName = ""; n.formData.rows[t].columnName = "" } }; n.createQuery = function () { angular.forEach(n.formData.rows, function (n) { n.typeId = parseInt(n.typeId) }); t({ method: "POST", url: "https://localhost:44313/api/query/Create", data: n.formData }); n.queryCreated = !0 } }); myControllers.controller("DeleteController", function (n, t, i) { n.queryDeleted = !1; t.get("https://localhost:44313/api/query/NoList/" + i.queryId).then(function (t) { n.deleteInfo = t.data }); n.deleteQuery = function () { t.delete("https://localhost:44313/api/query/DeleteQuery/" + i.queryId); n.queryDeleted = !0 } }); myControllers.controller("EditController", function (n, t, i) { n.queryEdited = !1; n.deletedQueryParams = []; t.get("https://localhost:44313/api/query/NoList/" + i.queryId).then(function (t) { n.editInfo = t.data }); n.addOptions = function (t) { const i = document.getElementsByClassName("sql-options-" + t); if (n.editInfo.queryParams[t].typeId == "4") for (const n of i) n.style.display = "block"; else { for (const n of i) n.style.display = "none"; n.editInfo.queryParams[t].tableName = ""; n.editInfo.queryParams[t].columnName = "" } }; n.addRow = function () { n.editInfo.queryParams.push({ name: "", typeId: 0, parameterCode: "", tableName: "", columnName: "" }) }; n.removeRow = function (t) { var i = n.editInfo.queryParams[t].id; i != undefined && n.deletedQueryParams.push(i); n.editInfo.queryParams.splice(t, 1) }; n.editQuery = function () { angular.forEach(n.editInfo.queryParams, function (n) { n.typeId = parseInt(n.typeId) }); n.editInfo.queryParamsToDelete = n.deletedQueryParams; t({ method: "PUT", url: "https://localhost:44313/api/query/UpdateQuery", data: n.editInfo }); n.queryEdited = !0 } }); myControllers.controller("DetailsController", function (n, t, i) { t.get("https://localhost:44313/api/query/NoList/" + i.queryId).then(function (t) { n.queryInfo = t.data }) }); myControllers.controller("QueryListController", function (n, t) { t.get("https://localhost:44313/api/query").then(function (t) { n.queries = t.data }) }); myControllers.controller("SearchController", function (n, t, i) { function r() { var t; return n.validInputs = !0, t = { QueryId: n.searchInfo.query.id, Parameters: [] }, angular.forEach(n.searchInfo.queryParams, function (i) { if (i.typeId == 2) { i.value = u(i.value); /^[0-9]{4}-[0-9]{2}-[0-9]{2}/.test(i.value) || (n.dateInputMessage = "Ogiltligt Datum", n.validInputs = !1) } t.Parameters.push({ Id: i.id, Value: i.value.toString() }) }), { valid: n.validInputs, payload: t } } function u(n) { var r = new Date(n), t = "" + (r.getMonth() + 1), i = "" + r.getDate(), u = r.getFullYear(); return t.length < 2 && (t = "0" + t), i.length < 2 && (i = "0" + i), [u, t, i].join("-") } n.searchCompleted = !1; t.get("https://localhost:44313/api/query/List/" + i.queryId).then(function (t) { n.searchInfo = t.data }); n.searchQueryExcel = function () { var n = r(); n.valid && t({ method: "POST", url: "https://localhost:44313/api/query/SearchExcel", data: n.payload }) }; n.searchQuery = function () { var i = r(); i.valid && t.post("https://localhost:44313/api/query/Search", i.payload).then(function (t) { n.searchResult = t.data; n.searchCompleted = !0 }, function (n) { console.log("error"); console.log(n) }) } });